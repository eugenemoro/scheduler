server:
  port: 8080

## Testing Actuator
management:
  endpoint:
    metrics.enabled: true
    health.enabled: true
    info.enabled: true
  server.port: 8080

## App info in Actuator
info:
  app:
    name: "scheduler"
    description: "Scheduler Application"
    version: "0.0.1-SNAPSHOT"

logging:
  level.org.hibernate.SQL: DEBUG
  level.org.hibernate.type.descriptor.sql.BasicBinder: TRACE

## Spring config
spring:
  ##  SMTP EMAIL params
  mail:
    default-encoding: UTF-8
    host: smtp.gmail.com
    username: gbscheduler@gmail.com
    password: mailPass
    port: 465
    protocol: smtp
    test-connection: false
    properties:
      mail.smtp.socketFactory.port: 465
      mail.smtp.socketFactory.class: javax.net.ssl.SSLSocketFactory
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

  ## DATASOURCE
  datasource:
    url: jdbc:mysql://localhost:3306/gbscheduler?useSSL=false
    username: root
    password: qwerty
    driver-class-name: com.mysql.jdbc.Driver
    tomcat:
      max-wait: 10000
      max-active: 10
      max-idle: 5
      min-idle: 1
      test-on-borrow: true
      test-while-idle: true
      validation-query: SELECT 1

  ## JDBC (JdbcProperties)
  jdbc:
    # Number of rows that should be fetched from the database when more rows are needed.
    template.fetch-size: 500
    # Maximum number of rows.
    template.max-rows: -1

  ## JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
  # Whether to enable JPA repositories.
  data.jpa.repositories.enabled: true
  jpa:
    # Whether to initialize the schema on startup.
    generate-ddl: false
    # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
    hibernate.ddl-auto: create
    # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
    open-in-view: true
    # Whether to enable logging of SQL statements.
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        show_sql: true
        max_fetch_depth: 3
        jdbc.fetch_size: 50
        jdbc.batch_size: 10

  ## JTA (JtaAutoConfiguration)
  jta:
    # Whether to enable JTA support.
    enabled: true

  ## Thymeleaf config
  thymeleaf:
    # Whether to enable template caching.
    cache: false
    # Whether to check that the template exists before rendering it.
    check-template: true
    # Whether to check that the templates location exists.
    check-template-location: true
    # Whether to enable Thymeleaf view resolution for Web frameworks.
    enabled: true
    # Enable the SpringEL compiler in SpringEL expressions.
    enable-spring-el-compiler: true
    # Template files encoding.
    encoding: UTF-8
    # Template mode to be applied to templates. See also Thymeleaf's TemplateMode enum.
    mode: HTML
    # Prefix that gets prepended to view names when building a URL.
    prefix: classpath:/templates/
    # Comma-separated list of view names (patterns allowed) that should be the only ones executed in CHUNKED mode when a max chunk size is set.
    # Maximum size of data buffers used for writing to the response, in bytes.
    reactive.max-chunk-size: 0
    # Content-Type value written to HTTP responses.
#    servlet.content-type: text/html
    # Suffix that gets appended to view names when building a URL.
    suffix: .html
